// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render MainScreen 1`] = `
<View>
  <View>
    <Text
      style={
        Object {
          "fontSize": 16,
          "margin": 10,
        }
      }
    >
      Digite seus dados: 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 16,
          "marginLeft": 10,
          "marginTop": 10,
        }
      }
    >
      Nome / Razão Social
    </Text>
    <TextInput
      allowFontScaling={true}
      autoCorrect={false}
      autoFocus={true}
      editable={true}
      onChangeText={[Function]}
      rejectResponderTermination={true}
      style={
        Object {
          "borderColor": "black",
          "borderWidth": 1,
          "height": 30,
          "margin": 10,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "marginLeft": 10,
            "marginTop": 10,
          }
        }
      >
        CPF / CNPJ
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        keyboardType="number-pad"
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "black",
            "borderWidth": 1,
            "height": 30,
            "margin": 10,
          }
        }
        textInputStyle="tel"
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "marginTop": 20,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Criar
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 16,
          "margin": 20,
        }
      }
    >
      Usuários
    </Text>
  </View>
  <View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "height": "56%",
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View />
    </RCTScrollView>
  </View>
</View>
`;
